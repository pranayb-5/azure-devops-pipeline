# azure-pipelines.yml
trigger: none

pool:
  vmImage: 'ubuntu-latest'

variables:
  REMOTE_CMD: 'date'              # your single command
  

steps:
  # 1) Pick your Python version
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '3.12'   # or 3.11/3.10 as needed

  # 2) Install deps (if any)
  - script: |
      python -m pip install --upgrade pip
      pip install psutil    
      pip install pyotp
      pip install requests
      pip install Crypto
      pip install "pycryptodome>=3.20"
    displayName: 'Install dependencies'

  # 3) Run Python, capture stdout in a Bash variable, set a pipeline variable
  
  - bash: |      
      set -euo pipefail
      while IFS='=' read -r k v; do
        [ -z "${k:-}" ] && continue
        echo "##vso[task.setvariable variable=${k}]${v}"
      done < <(python arconazplugin.py lCpGj6G+cuuNQbA4cIWcBy8Cia4umkN1/ZovDWBmO22vH3MUR/sjTjzOzV1gfKC7ylJFkJ8LTAQF8AFvy2kBSFjt49Xqw9qjJKOreKCswWxeKoFEMIWZgNJHlo+gsw1N90oFSxx54Tpb34ZPjSiZqxhgBRGs8cTogvLh+Ko09mTWELCSeKM891ZjcsEyYYN0G1wlf0S7s91SiMyl2ltXhOo/orlhguIRbOR5hpFfgpcGFlqmSGN2BRdps4GAP/3i7xVmIyAEVkMEzQwEfcFdoGddEgfOuE1E3By8NZHlyGdy8woJWidzLSdwepvGkjsEDphDwrWkAB2dkQ55fBZ5kOI/mIuY7NtlZZzVxhpOVVBZhm8OJRTe6aM3+yMOf+jgGy3RDMavYDVtu6Dv0SBfLsNkMZtC5IcI5vVOWFcgwWS6YdlZUuS6/VFwXaCVe0NN user1 ansible-target)    
    displayName: 'Run Python and set pipeline variable'

  # 4) Use the variable
  - bash: |
      echo "ALIAS: $(ALIAS)"
      echo "IP: $(IP)"
      echo "USER: $(USER)"
      echo "PWD set: $([ -n "$(PASSWORD)" ] && echo yes || echo no)"
    displayName: 'Use the Python value'

  - script: |
      set -euo pipefail
      sudo apt-get install -y sshpass openssh-client
  
      export SSHPASS="$(PASSWORD)"
  
      USER_VAL="${USER:-$USER}"
      HOST_VAL="${IP:-$IP}"
      PORT_VAL="${SSH_PORT:-22}"
  
      echo "Running remote: '${REMOTE_CMD}' on ${USER_VAL}@${HOST_VAL}:${PORT_VAL}"
  
      set +e
      SSH_OUT="$(
        sshpass -e ssh \
          -o StrictHostKeyChecking=no \
          -o UserKnownHostsFile=/dev/null \
          -o PreferredAuthentications=password,keyboard-interactive \
          -o PubkeyAuthentication=no \
          -o NumberOfPasswordPrompts=1 \
          -o LogLevel=ERROR \
          -p "${PORT_VAL}" \
          "${USER_VAL}@${HOST_VAL}" -- "$(REMOTE_CMD)" 2>&1
      )"
      RC=$?
      set -e
  
      echo "----- Remote command output -----"
      echo "$SSH_OUT"
      echo "---------------------------------"
      echo "##vso[task.setvariable variable=REMOTE_OUTPUT]$SSH_OUT"
  
      if [ $RC -eq 255 ]; then
        echo "##vso[task.logissue type=error]SSH failed to connect (exit 255). Check network reachability, auth method, or server SSH settings."
        exit 255
      elif [ $RC -ne 0 ]; then
        echo "##vso[task.logissue type=error]Remote command exited with code $RC"
        exit $RC
      fi
    displayName: 'SSH, print output, propagate exit code'

  
